// Define the applicant model
enum ApplicationStatus {
  PENDING
  DECLINED
  COMPLETED
  MAKEPAYMENT
  ACCEPTED
}

model application {
  id        String            @id @default(cuid())
  // leaseStartDate  DateTime?
  // leaseEndDate    DateTime?
  // moveInDate      DateTime?
  // rentAmount      Decimal?
  // securityDeposit Decimal?
  // leaseTerm       String?
  status    ApplicationStatus @default(PENDING)
  isDeleted Boolean           @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // relation ship fields
  userId String?
  user   users?  @relation(fields: [userId], references: [id])

  // residentialInformation residentialInformation[]
  residentialId      String?
  residentialInfo    residentialInformation? @relation(fields: [residentialId], references: [id])
  emergencyContactId String?
  emergencyInfo      emergencyContact?       @relation(fields: [emergencyContactId], references: [id])

  employmentInformationId String?
  employmentInfo          EmploymentInformation? @relation(fields: [employmentInformationId], references: [id])
  documents               document[]

  properties   properties? @relation(fields: [propertiesId], references: [id])
  propertiesId String?

  personalDetails            applicantPersonalDetails @relation(fields: [applicantPersonalDetailsId], references: [id])
  applicantPersonalDetailsId String
  guarantorInformation       guarantorInformation?    @relation(fields: [guarantorInformationId], references: [id])
  guarantorInformationId     String?
  // Relation to the tenant after application approval
  // Tenant (new user created upon approval)
  tenantId                   String?
  tenant                     users?                   @relation("TenantApplications", fields: [tenantId], references: [id])
}

model applicantPersonalDetails {
  id            String        @id @default(cuid())
  title         String
  firstName     String
  middleName    String?
  lastName      String
  dob           DateTime
  email         String        @unique
  phoneNumber   String
  maritalStatus String
  application   application[]
  nextOfKin     nextOfKin[]
}

model nextOfKin {
  id                         String                    @id @default(cuid())
  lastName                   String
  relationship               String
  email                      String
  firstName                  String
  phoneNumber                String
  createdAt                  DateTime                  @default(now())
  updatedAt                  DateTime                  @updatedAt
  middleName                 String?
  // One-to-one relationship with applicantPersonalDetails
  applicantPersonalDetails   applicantPersonalDetails? @relation(fields: [applicantPersonalDetailsId], references: [id])
  applicantPersonalDetailsId String?                   @unique
  userId                     String        
  user                       users                     @relation(fields: [userId], references: [id])
}

// Define the residentialInformation model
model PrevAddress {
  id                       String                  @id @default(cuid())
  address                  String
  lengthOfResidence        String
  residentialInformation   residentialInformation? @relation(fields: [residentialInformationId], references: [id])
  residentialInformationId String?
}

model residentialInformation {
  id                String @id @default(cuid())
  address           String
  addressStatus     String
  lengthOfResidence String

  landlordOrAgencyPhoneNumber String
  landlordOrAgencyEmail       String
  landlordOrAgencyName        String

  user   users?  @relation(fields: [userId], references: [id])
  userId String?

  prevAddresses PrevAddress[]
  application   application[]
}

model guarantorInformation {
  id          String        @id @default(cuid())
  fullName    String
  phoneNumber String
  email       String
  address     String
  application application[]
}

model emergencyContact {
  id          String        @id @default(cuid())
  fullname    String
  phoneNumber String
  email       String
  address     String
  application application[]
}

// Define the document model
model document {
  id           String   @id @default(cuid())
  documentName String
  documentUrl  String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  applicantId String
  application application @relation(fields: [applicantId], references: [id])
}

// Define the EmploymentInformation model
model EmploymentInformation {
  id                String        @id @default(cuid())
  employmentStatus  String
  taxCredit         String?
  childBenefit      String?
  childMaintenance  String?
  disabilityBenefit String?
  housingBenefit    String?
  others            String?
  pension           String?
  moreDetails       String?
  employerCompany   String?
  employerEmail     String?
  employerPhone     String?
  positionTitle     String?
  application       application[]
}
